---
// Sekcja O Nas z dwukolumnowym layoutem
import LucideIcon from './LucideIcon.astro';


import PillarContentIsland from './PillarContentIsland.jsx';

export interface Props {
  data?: {
    title?: string;
    description?: string;
    team_image?: string;
    pillars?: Array<{
      icon: string;
      title: string;
      description: string;
      content?: string; // Nowe pole markdown
    }>;
    stats?: Array<{
      number: string;
      label: string;
    }>;
  };
}

const { data } = Astro.props;

// Fallback values jeśli brak danych z CMS
const aboutData = {
  title: data?.title || "Kapitan na pokładzie Twojego eventu",
  description: data?.description || "Witaj na pokładzie! Nazywam się [Imię Założyciela] i jestem kapitanem, który od ponad 10 lat bezpiecznie prowadzi wydarzenia przez wszystkie, nawet najbardziej wzburzone, wody technicznych wyzwań.",
  // team_image usunięte, nie jest już używane
  pillars: data?.pillars || [
    {
      icon: "lightbulb",
      title: "Oświetlenie",
      description: "Profesjonalne systemy oświetleniowe, które nadają Twojemu wydarzeniu właściwy nastrój i charakter.",
      content: "**Przykładowa treść**\n\n- List punktowany\n- Druga linia"
    },
    {
      icon: "mic",
      title: "Nagłośnienie", 
      description: "Krystalicznie czyste brzmienie dzięki najnowocześniejszemu sprzętowi audio i profesjonalnej obsłudze.",
      content: "**Nagłośnienie**\n\nOpis markdown dla nagłośnienia."
    },
    {
      icon: "monitor",
      title: "Multimedia",
      description: "Zaawansowane systemy wizualne, ekrany LED i projekcje, które przeniosą Twoich gości w inny wymiar.",
      content: "**Multimedia**\n\nOpis markdown dla multimediów."
    }
  ],
  stats: data?.stats || [
    { number: "150", label: "Zrealizowanych eventów" },
    { number: "10", label: "Lat doświadczenia" },
    { number: "50", label: "Zadowolonych klientów" }
  ]
};
---

<section id="o-nas" class="section about-section">
  <div class="container">
    <!-- Nagłówek i opis główny - wycentrowane na całą szerokość -->
    <div class="section-header">
      <h2 class="section-title">
        {aboutData.title}
      </h2>
      <p class="section-intro" set:html={aboutData.description.replace(/\n/g, '<br />')}>
      </p>
    </div>
    <!-- Główna siatka: dynamiczna wyspa React -->
    <PillarContentIsland client:load pillars={aboutData.pillars} />

    <!-- Statystyki -->
    {aboutData.stats && aboutData.stats.length > 0 && (
      <div class="stats">
        {aboutData.stats.map((stat) => {
          // Wyodrębnij sufix (np. +, %, itp.)
          const match = stat.number.match(/^(\d+)(\D*)$/);
          const value = match ? match[1] : stat.number;
          const suffix = match ? match[2] : '';
          return (
            <div class="stat">
              <span class="stat-number" data-count={value} data-suffix={suffix}>{stat.number}</span>
              <span class="stat-label">{stat.label}</span>
            </div>
          );
        })}
      </div>
    )}
</style>
<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  // Counter animation (mechanizm jak w KlienciSection.astro)
  const animateCounters = () => {
    const counters = document.querySelectorAll('.stats .stat-number');
    counters.forEach(counter => {
      const element = counter;
      const target = parseInt(element.dataset.count || '0');
      const suffix = element.dataset.suffix || '';
      const duration = 2000;
      const step = target / (duration / 16);
      let current = 0;
      const updateCounter = () => {
        current += step;
        if (current >= target) {
          counter.textContent = target + suffix;
        } else {
          counter.textContent = Math.floor(current) + (current > target * 0.8 ? suffix : '');
          requestAnimationFrame(updateCounter);
        }
      };
      updateCounter();
    });
  };
  // Intersection Observer for stats animation
  const observerOptions = {
    threshold: 0.2,
    rootMargin: '0px 0px -50px 0px'
  };
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting && entry.target.classList.contains('stats')) {
        animateCounters();
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);
  document.querySelectorAll('.stats').forEach(el => {
    observer.observe(el);
  });
});
</script>
    <!-- Modal i zdjęcia usunięte jako niepotrzebne -->
  </div>

</section>

<style>
  .about-section {
    background-color: var(--bg-main);
    position: relative;
    min-height: 100vh;
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }

  .section-title {
    color: var(--text-main);
    margin-bottom: 1.5rem;
    font-size: 2.5rem;
  }

  .section-intro {
    font-size: 1.2rem;
    color: var(--text-secondary);
    line-height: 1.6;
    margin: 0;
  }

  /* Image Section */
  .about-image {
    position: relative;
  }

  .image-container {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    transition: var(--transition-fast);
  }

  .image-container:hover {
    transform: translateY(-10px);
    box-shadow: 0 30px 80px rgba(0, 0, 0, 0.4);
  }

  .team-photo {
    width: 100%;
    height: auto;
    display: block;
    transition: var(--transition-fast);
  }

  .team-media {
    width: 100%;
    height: auto;
    display: block;
    transition: var(--transition-fast);
  }

  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(18, 18, 18, 0.9) 0%, rgba(0, 169, 255, 0.85) 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: var(--transition);
    cursor: pointer;
    backdrop-filter: blur(2px);
  }

  .image-container:hover .image-overlay {
    opacity: 1;
  }

  .image-overlay .play-button {
    cursor: pointer;
  }

  .image-overlay .about-cursor-hand {
    width: 48px;
    height: 48px;
    color: var(--accent-blue);
    display: flex;
    align-items: center;
    justify-content: center;
    background: none;
    border: none;
    pointer-events: none;
  }

  /* Content Section */

  /* Services Pillars */


 



  /* Statistics */
  .stats {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    width: 100%;
    margin: 1rem auto;
  }
  .stat {
    min-width: 180px;
    flex: 1 1 180px;
    max-width: 100%;
  }

  .stat {
    text-align: center;
    padding: 1rem;
    background: linear-gradient(135deg, rgba(0, 169, 255, 0.1), rgba(0, 169, 255, 0.05));
    border-radius: 12px;
    border: 1px solid rgba(0, 169, 255, 0.2);
  }

  .stat-number {
    display: block;
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--accent-blue);
    font-family: var(--font-heading);
    line-height: 1;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.9rem;
    color: var(--text-secondary);
    font-weight: 500;
  }

  /* Modal Styles */
  .about-lightbox-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    background: rgba(18, 18, 18, 0.95);
    backdrop-filter: blur(8px);
    transition: opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .about-lightbox-modal.open {
    visibility: visible;
    opacity: 1;
    pointer-events: auto;
  }

  .about-lightbox-content {
    position: relative;
    max-width: 1200px;
    max-height: 85vh;
    width: auto;
    height: auto;
    background: var(--bg-secondary);
    border-radius: 25px;
    overflow: hidden;
    transform: scale(0.92);
    transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.35s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(0, 169, 255, 0.2);
    box-shadow: 0 25px 60px rgba(0, 0, 0, 0.5);
    will-change: opacity, transform;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 0;
  }

  .about-lightbox-modal.open .about-lightbox-content {
    transform: scale(1);
  }

  .about-lightbox-close {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 40px;
    height: 40px;
    background: rgba(18, 18, 18, 0.9);
    border: 2px solid rgba(0, 169, 255, 0.3);
    border-radius: 50%;
    color: var(--text-main);
    cursor: pointer;
    z-index: 10;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(5px);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  @media (min-width: 768px) {
    .about-lightbox-close {
      top: 25px;
      right: 25px;
      width: 45px;
      height: 45px;
    }
  }

  .about-lightbox-close:hover {
    background: var(--accent-blue);
    border-color: var(--accent-blue);
    transform: scale(1.1);
  }

  .about-lightbox-close svg {
    width: 20px;
    height: 20px;
  }

  @media (min-width: 768px) {
    .about-lightbox-close svg {
      width: 22px;
      height: 22px;
    }
  }

  .about-lightbox-body {
    width: auto;
    height: auto;
    min-width: 0;
    min-height: 0;
    max-width: 100vw;
    max-height: 85vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-main);
    border-radius: 10px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    overflow: hidden;
    padding: 0;
  }

  .about-lightbox-body img, .about-lightbox-body video {
    max-width: 1200px !important;
    max-height: 85vh !important;
    width: auto !important;
    height: auto !important;
    object-fit: contain !important;
    border-radius: 10px !important;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3) !important;
    transition: opacity 0.3s ease !important;
    background: transparent !important;
    display: block;
    margin: 0 auto;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .about-grid {
      gap: 3rem;
    }

    .about-content {
      padding-left: 1rem;
    }
    
    .about-lightbox-content {
      max-width: 98vw;
      width: auto;
      min-width: 0;
      border-radius: 14px;
      padding: 0;
    }
  }

  @media (max-width: 768px) {
    .about-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .about-content {
      padding-left: 0;
    }
    
    .about-lightbox-content {
      max-width: 98vw;
      width: auto;
      min-width: 0;
      border-radius: 14px;
      padding: 0;
    }
    .about-lightbox-body {
      width: auto;
      height: auto;
      min-width: 0;
      min-height: 0;
      max-width: 98vw;
      max-height: 98vh;
      border-radius: 10px;
      padding: 0;
    }
    .about-lightbox-body img, .about-lightbox-body video {
      max-width: 98vw !important;
      max-height: 98vh !important;
      width: auto !important;
      height: auto !important;
      border-radius: 10px !important;
    }
  }

  @media (max-width: 480px) {
    .about-lightbox-content {
      max-width: 100vw;
      width: auto;
      border-radius: 8px;
    }
    .about-lightbox-body {
      width: auto;
      height: auto;
      min-width: 0;
      min-height: 0;
      max-width: 100vw;
      max-height: 100vh;
      border-radius: 6px;
    }
    .about-lightbox-body img, .about-lightbox-body video {
      max-width: 100vw !important;
      max-height: 100vh !important;
      width: auto !important;
      height: auto !important;
      border-radius: 6px !important;
    }
  }

  /* Najmniejsze mobile: poprawa szerokości kontenera filarów i statystyk */
  @media (max-width: 480px) {
    .about-content {
      padding-left: 0;
      max-width: 100vw;
      width: 100%;
    }
    .services-pillars {
      grid-template-columns: 1fr;
      gap: 0.7rem;
      width: 100%;
      max-width: 100vw;
    }
    .pillar {
      flex-direction: row;
      gap: 0.7rem;
      padding: 0.7rem;
      font-size: 0.95rem;
      width: 100%;
      min-width: 0;
      box-sizing: border-box;
    }
    .pillar-icon {
      width: 38px;
      height: 38px;
      border-radius: 8px;
    }
    .pillar-icon svg {
      width: 18px;
      height: 18px;
    }
    .pillar h3 {
      font-size: 1rem;
      margin-bottom: 0.2rem;
    }
    .pillar p {
      font-size: 0.92rem;
    }
    .stats {
      grid-template-columns: 1fr;
      gap: 0.7rem;
      width: 100%;
      max-width: 100vw;
    }
    .stat {
      padding: 0.7rem;
      font-size: 1rem;
      border-radius: 8px;
    }
    .stat-number {
      font-size: 1.5rem;
    }
    .stat-label {
      font-size: 0.85rem;
    }
  }
 </style>
<script type="application/json" id="about-section-pillars-data">{JSON.stringify(aboutData.pillars)}</script>
</script>
