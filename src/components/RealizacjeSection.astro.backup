---
// Sekcja Realizacji z gridem projektów i lightbox galeria
import { getCollection } from 'astro:content';

// Interface dla props
export interface Props {
  realizacje?: any[];
  kategorie?: any[];
}

// Pobierz realizacje i kategorie z content collections
let realizacje: any[] = [];
let kategorie: any[] = [];

try {
  realizacje = await getCollection('realizacje');
  kategorie = await getCollection('kategorie-realizacji');
} catch (error) {
  console.error('Błąd podczas pobierania danych z CMS:', error);
}

// Sortuj realizacje według daty (najnowsze pierwsze)
const sortedRealizacje = realizacje.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Sortuj kategorie według kolejności
const sortedKategorie = kategorie
  .filter(k => k.data.active !== false)
  .sort((a, b) => (a.data.order || 0) - (b.data.order || 0));

// Pobierz realizacje z props lub użyj danych z CMS
const { realizacje: propRealizacje, kategorie: propKategorie } = Astro.props;

// Przykładowe dane jeśli brak realizacji z CMS (zgodne z wytycznymi z kapitanie.md)
const mockRealizacje = [
  {
    id: 'gala-x-kom',
    title: 'Gala Jubileuszowa X-KOM',
    client: 'X-KOM',
    category: 'Gale Firmowe',
    description: 'Prestiżowa gala jubileuszowa dla 1000 osób, która połączyła elegancję z nowoczesnym charakterem marki technologicznej.',
    challenge: 'Stworzenie immersyjnej oprawy wizualnej dla gali na 1000 osób, która połączy elegancję z technologicznym charakterem marki.',
    solution: 'Zaprojektowaliśmy i zrealizowaliśmy system oświetlenia kinetycznego, zsynchronizowany z treściami wyświetlanymi na ekranie LED o powierzchni 100m².',
    image: '/images/realizacje/gala-x-kom.jpg',
    gallery: [
      '/images/realizacje/gala-x-kom-1.jpg',
      '/images/realizacje/gala-x-kom-2.jpg',
      '/images/realizacje/gala-x-kom-3.jpg'
    ],
    tags: ['gala firmowa', 'oświetlenie LED', 'event korporacyjny', 'multimedia'],
    featured: true
  },
  {
    id: 'tech-summit-2024',
    title: 'Tech Summit 2024',
    client: 'TechCorp',
    category: 'Konferencje',
    description: 'Kompleksowa obsługa techniczna największej konferencji technologicznej w regionie z udziałem 500+ uczestników.',
    challenge: 'Zapewnienie najwyższej jakości transmisji online oraz wsparcia hybrydowego wydarzenia z interaktywnymi elementami.',
    solution: 'Wdrożyliśmy zaawansowany system streamingu 4K z wielokamerową realizacją na żywo, interaktywnymi sesjami Q&A i dedykowaną aplikacją eventową.',
    image: '/images/realizacje/tech-summit.jpg',
    gallery: [
      '/images/realizacje/tech-summit-1.jpg',
      '/images/realizacje/tech-summit-2.jpg',
      '/images/realizacje/tech-summit-3.jpg'
    ],
    tags: ['streaming 4K', 'konferencja', 'hybrid event', 'aplikacja'],
    featured: false
  },
  {
    id: 'koncert-filharmonia',
    title: 'Koncert Filharmonii Krakowskiej',
    client: 'Filharmonia Krakowska',
    category: 'Koncerty',
    description: 'Profesjonalna obsługa dźwięku dla koncertu symfonicznego z wykorzystaniem przestrzennych systemów audio najwyższej klasy.',
    challenge: 'Zachowanie naturalnej akustyki sali przy jednoczesnym wsparciu elektronicznym dla transmisji i nagrania koncertu.',
    solution: 'Zastosowaliśmy subtelny system wspomagania akustycznego z mikrofonami pojemnościowymi najwyższej klasy oraz wielokanałowy system nagraniowy.',
    image: '/images/realizacje/koncert-philharmonic.jpg',
    gallery: [
      '/images/realizacje/koncert-1.jpg',
      '/images/realizacje/koncert-2.jpg',
      '/images/realizacje/koncert-3.jpg'
    ],
    tags: ['audio premium', 'koncert symfoniczny', 'akustyka', 'nagranie'],
    featured: false
  },
  {
    id: 'fashion-week-krakow',
    title: 'Kraków Fashion Week',
    client: 'Fashion Week Kraków',
    category: 'Eventy Korporacyjne',
    description: 'Spektakularna oprawa świetlna i multimedialna dla największego wydarzenia modowego w Małopolsce.',
    challenge: 'Stworzenie różnorodnych nastrojów świetlnych dla każdego projektanta przy zachowaniu spójności całego wydarzenia.',
    solution: 'Zaprogramowaliśmy 50+ scen świetlnych zsynchronizowanych z muzyką i choreografią pokazów, z dynamicznym oświetleniem LED i projekcjami mapping.',
    image: '/images/realizacje/fashion-week.jpg',
    gallery: [
      '/images/realizacje/fashion-1.jpg',
      '/images/realizacje/fashion-2.jpg',
      '/images/realizacje/fashion-3.jpg'
    ],
    tags: ['fashion show', 'oświetlenie LED', 'mapping', 'choreografia'],
    featured: true
  },
  {
    id: 'konferencja-abc-corp',
    title: 'Konferencja Roczna ABC Corp',
    client: 'ABC Corporation',
    category: 'Eventy Korporacyjne',
    description: 'Organizacja i obsługa techniczna dorocznej konferencji firmy z udziałem zarządu, pracowników i partnerów biznesowych.',
    challenge: 'Zapewnienie bezproblemowej transmisji prezentacji dla 300 uczestników stacjonarnych i 100 uczestników online.',
    solution: 'Wdrożyliśmy system hybrydowy z interaktywnymi możliwościami Q&A, networking oraz dedykowaną platformą do transmisji.',
    image: '/images/realizacje/corporate-event.jpg',
    gallery: [
      '/images/realizacje/corporate-1.jpg',
      '/images/realizacje/corporate-2.jpg',
      '/images/realizacje/corporate-3.jpg'
    ],
    tags: ['corporate', 'hybrid event', 'streaming', 'networking'],
    featured: false
  },
  {
    id: 'wedding-exclusive',
    title: 'Ekskluzywne Wesele w Plenerze',
    client: 'Prywatny Klient',
    category: 'Eventy Prywatne',
    description: 'Kompleksowa obsługa audiowizualna ekskluzywnego wesela w malowniczej scenerii pod gołym niebem.',
    challenge: 'Zapewnienie wysokiej jakości dźwięku i oświetlenia w trudnych warunkach zewnętrznych przy zmiennej pogodzie.',
    solution: 'Zastosowaliśmy weatherproof sprzęt profesjonalny oraz backup systemy dla pełnej niezawodności przez całą noc.',
    image: '/images/realizacje/wedding-luxury.jpg',
    gallery: [
      '/images/realizacje/wedding-1.jpg',
      '/images/realizacje/wedding-2.jpg',
      '/images/realizacje/wedding-3.jpg'
    ],
    tags: ['wesele', 'outdoor', 'audio premium', 'backup'],
    featured: false
  }
];

const mockKategorie = [
  { name: 'Gale Firmowe', order: 1 },
  { name: 'Konferencje', order: 2 },
  { name: 'Koncerty', order: 3 },
  { name: 'Eventy Korporacyjne', order: 4 },
  { name: 'Eventy Prywatne', order: 5 }
];

// Użyj danych z CMS lub mock danych
const displayRealizacje = sortedRealizacje.length > 0 ? sortedRealizacje.map(r => ({
  id: r.slug,
  title: r.data.title,
  client: r.data.client,
  category: r.data.category,
  description: r.data.description,
  challenge: r.data.challenge || '',
  solution: r.data.solution || '',
  image: r.data.featured_image || '/images/placeholder-project.jpg',
  gallery: r.data.gallery?.map((g: { image: string }) => g.image) || [r.data.featured_image || '/images/placeholder-project.jpg'],
  tags: r.data.tags || [],
  featured: r.data.featured || false
})) : mockRealizacje;

const displayKategorie = sortedKategorie.length > 0 ? sortedKategorie.map(k => ({
  name: k.data.name,
  order: k.data.order
})) : mockKategorie;
---

<section id="realizacje" class="section realizacje-section">
  <div class="container">
    <!-- Section Header -->
    <div class="section-header">
      <h2 class="section-title">Nasze Realizacje</h2>
      <p class="section-subtitle">
        Każdy projekt to unikalna historia sukcesu. Zobacz, jak przekuwamy wizje w rzeczywistość.
      </p>
    </div>

    <!-- Filter Buttons -->
    <div class="filter-buttons">
      <button class="filter-btn active" data-filter="all">Wszystkie</button>
      {displayKategorie.map((kategoria) => (
        <button class="filter-btn" data-filter={kategoria.name}>{kategoria.name}</button>
      ))}
    </div>

    <!-- Projects Grid -->
    <div class="projects-grid">
      {displayRealizacje.map((projekt) => (
        <div 
          class={`project-card ${projekt.featured ? 'featured' : ''}`}
          data-category={projekt.category}
          data-project-id={projekt.id}
        >
          <div class="project-image">
            {projekt.featured && (
              <div class="featured-badge">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <polygon points="12,2 15.09,8.26 22,9 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9 8.91,8.26"/>
                </svg>
                Wyróżnione
              </div>
            )}
            <img 
              src={projekt.image} 
              alt={`Realizacja: ${projekt.title}`}
              loading="lazy"
              width="400"
              height="300"
            />
            <div class="project-overlay">
              <div class="project-info">
                <h3 class="project-title">{projekt.title}</h3>
                <p class="project-category">{projekt.category}</p>
                {projekt.tags && projekt.tags.length > 0 && (
                  <div class="project-tags">
                    {projekt.tags.slice(0, 3).map((tag: string) => (
                      <span class="project-tag">{tag}</span>
                    ))}
                  </div>
                )}
                <button class="view-details-btn" aria-label={`Zobacz szczegóły projektu ${projekt.title}`}>
                  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                    <circle cx="12" cy="12" r="3"/>
                  </svg>
                  Zobacz szczegóły
                </button>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Load More Button -->
    <div class="load-more-container">
      <button class="btn btn-secondary load-more-btn">
        Pokaż więcej projektów
      </button>
    </div>
  </div>

  <!-- Lightbox Modal -->
  <div class="lightbox-modal" id="lightbox-modal" role="dialog" aria-labelledby="lightbox-title" aria-hidden="true">
    <div class="lightbox-backdrop"></div>
    <div class="lightbox-content">
      <button class="lightbox-close" aria-label="Zamknij lightbox">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"/>
          <line x1="6" y1="6" x2="18" y2="18"/>
        </svg>
      </button>
      
      <div class="lightbox-body">
        <div class="lightbox-gallery">
          <div class="gallery-main">
            <img class="gallery-main-image" src="" alt="" />
            <button class="gallery-prev" aria-label="Poprzednie zdjęcie">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="15,18 9,12 15,6"/>
              </svg>
            </button>
            <button class="gallery-next" aria-label="Następne zdjęcie">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="9,18 15,12 9,6"/>
              </svg>
            </button>
          </div>
          <div class="gallery-thumbs"></div>
        </div>
        
        <div class="lightbox-info">
          <h3 id="lightbox-title" class="lightbox-project-title">Tytuł projektu</h3>
          <div class="lightbox-meta">
            <span class="lightbox-client">Klient</span>
            <span class="lightbox-category">Kategoria</span>
          </div>
          <div class="lightbox-description">Opis projektu zostanie tutaj załadowany...</div>
          <div class="lightbox-case-study">
            <div class="case-study-section">
              <h4>Wyzwanie</h4>
              <p class="case-study-challenge">Wyzwanie projektu...</p>
            </div>
            <div class="case-study-section">
              <h4>Rozwiązanie</h4>
              <p class="case-study-solution">Rozwiązanie projektu...</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Import Google Fonts according to kapitanie.md guidelines */
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700;800&family=Lato:wght@400;700&display=swap');
  
  /* CSS Custom Properties based on kapitanie.md color palette */
  :root {
    --bg-main: #121212;        /* Głęboki grafit - tło sceny */
    --bg-secondary: #1F1F1F;   /* Ciemna stal - tło dla sekcji */
    --accent-blue: #00A9FF;    /* Elektryzujący niebieski - światło reflektora */
    --text-main: #F5F5F5;      /* Czysta, czytelna biel */
    --text-secondary: #B3B3B3; /* Jasny szary - mniej ważne informacje */
    --transition-fast: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --z-lightbox: 1000;
  }

  .realizacje-section {
    background-color: var(--bg-main);
    position: relative;
    padding: 5rem 0;
    font-family: 'Lato', sans-serif; /* Tekst akapitowy według wytycznych */
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out forwards;
  }

  .section-title {
    font-family: 'Montserrat', sans-serif; /* Nagłówki według wytycznych */
    font-weight: 700; /* Bold according to guidelines */
    font-size: 2.5rem;
    color: var(--text-main);
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .section-subtitle {
    font-family: 'Lato', sans-serif; /* Tekst akapitowy */
    font-size: 1.2rem;
    color: var(--text-secondary);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
    font-weight: 400;
  }

  /* Filter Buttons */
  .filter-buttons {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 3rem;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.8s ease-out 0.2s forwards;
  }

  .filter-btn {
    padding: 12px 24px;
    background: var(--bg-secondary);
    border: 2px solid rgba(0, 169, 255, 0.2);
    color: var(--text-secondary);
    border-radius: 30px;
    cursor: pointer;
    transition: var(--transition-fast);
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    font-size: 0.9rem;
    letter-spacing: 0.5px;
    text-transform: uppercase;
  }

  .filter-btn:hover,
  .filter-btn.active {
    background: var(--accent-blue);
    border-color: var(--accent-blue);
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 169, 255, 0.3);
  }

  /* Projects Grid */
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
    opacity: 0;
    animation: fadeInUp 0.8s ease-out 0.4s forwards;
  }

  .project-card {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    background: var(--bg-secondary);
    transition: var(--transition-fast);
    cursor: pointer;
    border: 1px solid rgba(0, 169, 255, 0.1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUpStagger var(--transition-fast) ease-out forwards;
  }

  .project-card:nth-child(1) { animation-delay: 0.5s; }
  .project-card:nth-child(2) { animation-delay: 0.6s; }
  .project-card:nth-child(3) { animation-delay: 0.7s; }
  .project-card:nth-child(4) { animation-delay: 0.8s; }
  .project-card:nth-child(5) { animation-delay: 0.9s; }
  .project-card:nth-child(6) { animation-delay: 1.0s; }

  .project-card:hover {
    transform: translateY(-10px) scale(1.05); /* Scale 1.05 according to guidelines */
    box-shadow: 0 25px 50px rgba(0, 169, 255, 0.2), 0 10px 30px rgba(0, 0, 0, 0.4);
    border-color: var(--accent-blue);
  }

  .project-image {
    position: relative;
    height: 280px;
    overflow: hidden;
    background: var(--bg-main); /* Fallback background */
  }

  .project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition-fast);
    /* Error handling for broken images */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 300'%3E%3Crect width='400' height='300' fill='%23121212'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' fill='%23B3B3B3' font-family='Montserrat' font-size='16'%3Ekapitanie%3C/text%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
  }

  .project-card:hover .project-image img {
    transform: scale(1.1);
    filter: brightness(1.1);
  }

  .project-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(18, 18, 18, 0.9) 0%,
      rgba(0, 169, 255, 0.85) 100%
    );
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: var(--transition-fast);
    backdrop-filter: blur(2px);
  }

  .project-card:hover .project-overlay {
    opacity: 1;
  }

  .project-info {
    text-align: center;
    color: var(--text-main);
    padding: 2rem;
    transform: translateY(20px);
    transition: var(--transition-fast);
  }

  .project-card:hover .project-info {
    transform: translateY(0);
  }

  .project-title {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 1.4rem;
    margin-bottom: 0.5rem;
    line-height: 1.3;
    color: var(--text-main);
  }

  .project-category {
    margin-bottom: 1.5rem;
    opacity: 0.9;
    font-size: 0.9rem;
    color: var(--text-main);
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .view-details-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: var(--text-main);
    color: var(--accent-blue);
    padding: 12px 24px;
    border-radius: 30px;
    border: none;
    cursor: pointer;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    font-size: 0.9rem;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    transition: var(--transition-fast);
    margin: 0 auto;
    box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2);
  }

  .view-details-btn:hover {
    background: var(--accent-blue);
    color: var(--text-main);
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 169, 255, 0.4);
  }

  .view-details-btn svg {
    width: 18px;
    height: 18px;
    transition: var(--transition-fast);
  }

  .view-details-btn:hover svg {
    transform: scale(1.1);
  }

  /* Load More */
  .load-more-container {
    text-align: center;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.8s ease-out 1.2s forwards;
  }

  .load-more-btn {
    padding: 15px 40px;
    font-size: 1.1rem;
    background: var(--bg-secondary);
    color: var(--accent-blue);
    border: 2px solid var(--accent-blue);
    border-radius: 30px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    transition: var(--transition-fast);
    cursor: pointer;
  }

  .load-more-btn:hover {
    background: var(--accent-blue);
    color: var(--text-main);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 169, 255, 0.3);
  }

  /* Lightbox Modal */
  .lightbox-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: var(--z-lightbox);
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden;
    opacity: 0;
    transition: var(--transition-fast);
    background: rgba(18, 18, 18, 0.95);
    backdrop-filter: blur(8px);
  }

  .lightbox-modal.open {
    visibility: visible;
    opacity: 1;
  }

  .lightbox-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(18, 18, 18, 0.95);
    backdrop-filter: blur(5px);
  }

  .lightbox-content {
    position: relative;
    width: 90%;
    max-width: 1200px;
    max-height: 90%;
    background: var(--bg-secondary);
    border-radius: 25px;
    overflow: hidden;
    transform: scale(0.8);
    transition: var(--transition-fast);
    border: 1px solid rgba(0, 169, 255, 0.2);
    box-shadow: 0 25px 60px rgba(0, 0, 0, 0.5);
  }

  .lightbox-modal.open .lightbox-content {
    transform: scale(1);
  }

  /* Debug styles - uncomment for debugging */
  /*
  .lightbox-info * {
    border: 1px solid red;
  }
  .lightbox-gallery * {
    border: 1px solid blue;
  }
  */

  .lightbox-close {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 40px;
    height: 40px;
    background: rgba(18, 18, 18, 0.9);
    border: 2px solid rgba(0, 169, 255, 0.3);
    border-radius: 50%;
    color: var(--text-main);
    cursor: pointer;
    z-index: 10;
    transition: var(--transition-fast);
    backdrop-filter: blur(5px);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  @media (min-width: 768px) {
    .lightbox-close {
      top: 25px;
      right: 25px;
      width: 45px;
      height: 45px;
    }
  }

  .lightbox-close:hover {
    background: var(--accent-blue);
    border-color: var(--accent-blue);
    transform: scale(1.1);
  }

  .lightbox-close svg {
    width: 20px;
    height: 20px;
  }

  @media (min-width: 768px) {
    .lightbox-close svg {
      width: 22px;
      height: 22px;
    }
  }

  .lightbox-body {
    display: flex;
    flex-direction: column;
    height: 80vh;
    min-height: 600px;
    max-height: 85vh;
    overflow: hidden;
  }

  @media (min-width: 768px) {
    .lightbox-body {
      display: grid;
      grid-template-columns: 1.6fr 1fr;
      grid-template-rows: 1fr;
    }
  }

  /* Gallery */
  .lightbox-gallery {
    position: relative;
    background: var(--bg-main);
    display: flex;
    flex-direction: column;
    height: 50vh;
    min-height: 300px;
  }

  @media (min-width: 768px) {
    .lightbox-gallery {
      border-right: 1px solid rgba(0, 169, 255, 0.1);
      height: 100%;
    }
  }

  .gallery-main {
    position: relative;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-main);
    padding: 20px;
    min-height: 250px;
    overflow: hidden;
  }

  @media (min-width: 768px) {
    .gallery-main {
      min-height: 0;
    }
  }

  .gallery-main-image {
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    object-fit: contain;
    border-radius: 10px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    transition: opacity 0.3s ease;
  }

  .gallery-main-image.loading {
    background: linear-gradient(90deg, var(--bg-secondary) 25%, rgba(0, 169, 255, 0.1) 50%, var(--bg-secondary) 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    min-height: 200px;
  }

  .gallery-prev,
  .gallery-next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 55px;
    height: 55px;
    background: rgba(18, 18, 18, 0.8);
    border: 2px solid rgba(0, 169, 255, 0.3);
    border-radius: 50%;
    color: var(--text-main);
    cursor: pointer;
    transition: var(--transition-fast);
    backdrop-filter: blur(5px);
  }

  .gallery-prev {
    left: 25px;
  }

  .gallery-next {
    right: 25px;
  }

  .gallery-prev:hover,
  .gallery-next:hover {
    background: var(--accent-blue);
    border-color: var(--accent-blue);
    transform: translateY(-50%) scale(1.1);
  }

  .gallery-thumbs {
    flex-shrink: 0;
    height: 100px;
    display: flex;
    gap: 10px;
    padding: 15px;
    overflow-x: auto;
    background: rgba(18, 18, 18, 0.8);
    border-top: 1px solid rgba(0, 169, 255, 0.1);
  }

  @media (min-width: 768px) {
    .gallery-thumbs {
      height: 120px;
      gap: 12px;
      padding: 20px;
    }
  }

  .gallery-thumb {
    flex-shrink: 0;
    width: auto;
    height: 60px;
    aspect-ratio: 4/3;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: var(--transition-fast);
    background: var(--bg-secondary);
  }

  @media (min-width: 768px) {
    .gallery-thumb {
      height: 80px;
      border-radius: 12px;
    }
  }

  .gallery-thumb.active {
    border-color: var(--accent-blue);
    transform: scale(1.05);
    box-shadow: 0 4px 15px rgba(0, 169, 255, 0.3);
  }

  .gallery-thumb img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition-fast);
  }

  .gallery-thumb:hover img {
    transform: scale(1.1);
  }

  /* Lightbox Info - Case Study Structure according to kapitanie.md */
  .lightbox-info {
    padding: 1.5rem;
    overflow-y: auto;
    background: var(--bg-secondary);
    font-family: 'Lato', sans-serif;
    display: flex;
    flex-direction: column;
    height: auto;
    flex: 1;
  }

  @media (min-width: 768px) {
    .lightbox-info {
      padding: 2.5rem;
      height: 100%;
      max-height: 80vh;
    }
  }

  .lightbox-project-title {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    color: var(--text-main);
    margin-bottom: 1rem;
    font-size: 1.4rem;
    line-height: 1.3;
  }

  @media (min-width: 768px) {
    .lightbox-project-title {
      font-size: 1.8rem;
    }
  }

  .lightbox-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }

  .lightbox-client,
  .lightbox-category {
    padding: 8px 16px;
    background: var(--accent-blue);
    color: var(--text-main);
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 600;
    font-family: 'Montserrat', sans-serif;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 4px 12px rgba(0, 169, 255, 0.3);
  }

  .lightbox-description {
    margin-bottom: 2.5rem;
    color: var(--text-secondary);
    line-height: 1.7;
    font-size: 1rem;
    font-weight: 400;
    /* Ensure description is always visible */
    min-height: 1em;
    opacity: 1;
  }

  @media (min-width: 768px) {
    .lightbox-description {
      margin-bottom: 2.5rem;
    }
  }

  .case-study-section {
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: rgba(0, 169, 255, 0.05);
    border-radius: 15px;
    border-left: 4px solid var(--accent-blue);
    /* Ensure sections are visible */
    opacity: 1;
    min-height: 3em;
  }

  .case-study-section p {
    color: var(--text-secondary);
    line-height: 1.7;
    font-size: 0.95rem;
    margin: 0;
    /* Ensure text is visible */
    opacity: 1;
    min-height: 1em;
  }

  .case-study-section h4 {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    color: var(--accent-blue);
    margin-bottom: 0.8rem;
    font-size: 1.1rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  /* Case Study Icons */
  .case-study-section h4::before {
    content: '';
    display: inline-block;
    width: 20px;
    height: 20px;
    margin-right: 10px;
    vertical-align: middle;
    background-size: contain;
    background-repeat: no-repeat;
  }

  .case-study-section:first-of-type h4::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2300A9FF' stroke-width='2'%3E%3Cpath d='M9 12l2 2 4-4'/%3E%3Cpath d='M21 12c.552 0 1-.448 1-1V5c0-.552-.448-1-1-1H3c-.552 0-1 .448-1 1v6c0 .552.448 1 1 1h9l4 4v-4h5z'/%3E%3C/svg%3E");
  }

  .case-study-section:last-of-type h4::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2300A9FF' stroke-width='2'%3E%3Cpolyline points='22,12 18,12 15,21 9,3 6,12 2,12'/%3E%3C/svg%3E");
  }

  /* Featured badge */
  .featured-badge {
    position: absolute;
    top: 20px;
    right: 20px;
    background: linear-gradient(135deg, #FFD700, #FFA500);
    color: #000;
    padding: 10px 16px;
    border-radius: 25px;
    font-size: 0.75rem;
    font-weight: 700;
    font-family: 'Montserrat', sans-serif;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: 6px;
    box-shadow: 0 6px 20px rgba(255, 215, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .featured-badge svg {
    width: 16px;
    height: 16px;
    fill: currentColor;
    stroke: none;
  }

  .project-card.featured {
    border: 2px solid #FFD700;
    box-shadow: 0 8px 30px rgba(255, 215, 0, 0.25);
    background: linear-gradient(145deg, var(--bg-secondary), rgba(255, 215, 0, 0.05));
  }

  .project-card.featured:hover {
    box-shadow: 0 25px 50px rgba(255, 215, 0, 0.3), 0 15px 35px rgba(0, 169, 255, 0.2);
  }

  /* Project tags */
  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    margin-bottom: 1.2rem;
    justify-content: center;
  }

  .project-tag {
    background: rgba(245, 245, 245, 0.15);
    color: var(--text-main);
    padding: 6px 12px;
    border-radius: 15px;
    font-size: 0.7rem;
    font-weight: 600;
    font-family: 'Montserrat', sans-serif;
    text-transform: uppercase;
    letter-spacing: 0.3px;
    border: 1px solid rgba(245, 245, 245, 0.2);
    backdrop-filter: blur(5px);
    transition: var(--transition-fast);
  }

  .project-tag:hover {
    background: rgba(0, 169, 255, 0.3);
    border-color: var(--accent-blue);
    transform: scale(1.05);
  }

  /* Responsive Design - Mobile First according to kapitanie.md */
  
  /* Tablet - 768px+ */
  @media (min-width: 768px) {
    .section-title {
      font-size: 3rem;
    }
    
    .section-subtitle {
      font-size: 1.3rem;
    }
    
    .projects-grid {
      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
      gap: 2rem;
    }
    
    .filter-btn {
      padding: 12px 28px;
      font-size: 0.95rem;
    }
    
    .project-image {
      height: 300px;
    }
  }

  /* Desktop - 1024px+ */
  @media (min-width: 1024px) {
    .section-title {
      font-size: 3.5rem;
    }
    
    .realizacje-section {
      padding: 6rem 0;
    }
    
    .projects-grid {
      grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
      gap: 2.5rem;
    }
    
    .lightbox-body {
      grid-template-columns: 2fr 1fr;
      height: 80vh;
      min-height: 700px;
      max-height: 85vh;
    }

    .lightbox-gallery {
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .gallery-main {
      flex: 1;
      min-height: 0;
      padding: 30px;
    }

    .gallery-thumbs {
      height: 140px;
      padding: 25px;
    }

    .gallery-thumb {
      height: 90px;
    }
    
    .lightbox-info {
      padding: 3rem;
      max-height: 80vh;
      overflow-y: auto;
    }
  }

  /* Large Desktop - 1920px+ */
  @media (min-width: 1920px) {
    .section-title {
      font-size: 4rem;
    }
    
    .section-subtitle {
      font-size: 1.4rem;
    }
    
    .projects-grid {
      grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));
      gap: 3rem;
      max-width: 1600px;
      margin: 0 auto;
    }
    
    .project-image {
      height: 320px;
    }
    
    .lightbox-content {
      max-width: 1400px;
    }
    
    .lightbox-body {
      height: 85vh;
      min-height: 800px;
    }

    .gallery-main {
      padding: 40px;
    }

    .gallery-thumbs {
      height: 160px;
      padding: 30px;
    }

    .gallery-thumb {
      height: 100px;
    }
  }

  /* Mobile Specific - up to 767px */
  @media (max-width: 767px) {
    .realizacje-section {
      padding: 3rem 0;
    }
    
    .section-title {
      font-size: 2rem;
    }
    
    .section-subtitle {
      font-size: 1rem;
      padding: 0 1rem;
    }
    
    .projects-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      padding: 0 1rem;
    }

    .filter-buttons {
      gap: 0.5rem;
      padding: 0 1rem;
      flex-wrap: wrap;
      justify-content: center;
    }

    .filter-btn {
      padding: 10px 18px;
      font-size: 0.8rem;
      white-space: nowrap;
    }

    .project-image {
      height: 220px;
    }

    .project-info {
      padding: 1.5rem;
    }

    .project-title {
      font-size: 1.2rem;
    }

    .lightbox-content {
      width: 95%;
      max-height: 95vh;
      margin: 1rem;
    }

    .lightbox-body {
      grid-template-columns: 1fr;
      height: auto;
      max-height: 85vh;
    }

    .lightbox-gallery {
      height: 350px;
      order: 1;
    }

    .gallery-main {
      height: 280px;
    }

    .gallery-thumbs {
      height: 70px;
      padding: 10px;
    }

    .gallery-thumb {
      width: 60px;
      height: 45px;
    }

    .lightbox-info {
      padding: 1.5rem;
      order: 2;
      max-height: 400px;
      overflow-y: auto;
    }

    .lightbox-project-title {
      font-size: 1.4rem;
    }

    .case-study-section {
      padding: 1rem;
      margin-bottom: 1.5rem;
    }

    .gallery-prev,
    .gallery-next {
      width: 45px;
      height: 45px;
    }

    .gallery-prev {
      left: 15px;
    }

    .gallery-next {
      right: 15px;
    }
  }

  /* Animations and Effects according to kapitanie.md */
  
  /* Keyframe Animations */
  @keyframes fadeInUp {
    from { 
      opacity: 0; 
      transform: translateY(30px); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0); 
    }
  }

  /* Pojedynczy keyframe dla wszystkich animacji projektów */
  @keyframes fadeInUp {
    from { 
      opacity: 0; 
      transform: translateY(30px) scale(0.95); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0) scale(1); 
    }
  }

  /* Prosta animacja dla project-animate-in */
  .project-animate-in {
    opacity: 1;
    transform: translateY(0) scale(1);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Nowa animacja dla filtrowania - zawsze działa */
  .project-animate-in {
    opacity: 1 !important;
    transform: translateY(0) scale(1) !important;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @keyframes projectFadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* Loading States */
  .project-card.loading {
    opacity: 0.6;
    pointer-events: none;
    animation: pulse 1.5s infinite;
  }

  .project-card.loading .project-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent 25%, rgba(0, 169, 255, 0.1) 50%, transparent 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    z-index: 1;
  }

  /* Skeleton Loader for Images */
  .gallery-main-image.loading {
    background: linear-gradient(90deg, var(--bg-secondary) 25%, rgba(0, 169, 255, 0.1) 50%, var(--bg-secondary) 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: 10px;
    min-height: 300px;
  }

  /* Error Handling Placeholder */
  .project-image img[alt*="Error"],
  .project-image img:not([src]),
  .project-image img[src=""] {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 300'%3E%3Crect width='400' height='300' fill='%23121212'/%3E%3Cg transform='translate(200,150)'%3E%3Ctext x='0' y='-40' text-anchor='middle' fill='%2300A9FF' font-family='Montserrat' font-size='24' font-weight='700'%3Ekapitanie%3C/text%3E%3Ctext x='0' y='-10' text-anchor='middle' fill='%23B3B3B3' font-family='Lato' font-size='14'%3EObraz niedostępny%3C/text%3E%3Cpath d='M-30,-30 L30,30 M30,-30 L-30,30' stroke='%23B3B3B3' stroke-width='2' opacity='0.5'/%3E%3C/g%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    background-color: var(--bg-main);
  }

  /* Utility Classes - uproszczone */
  .project-card.visible {
    display: block;
    animation: fadeInUp 0.6s ease-out forwards;
  }
</style>

<!-- Global script z danymi -->
<script is:inline define:vars={{ displayRealizacje, displayKategorie }}>
  window.realizacjeData = {
    displayRealizacje: displayRealizacje,
    displayKategorie: displayKategorie
  };
</script>

<script>
  // Typowanie dla projektów i kategorii
  interface ProjectType {
    id: string;
    title: string;
    client: string;
    category: string;
    description: string;
    challenge: string;
    solution: string;
    image: string;
    gallery: string[];
    tags: string[];
    featured: boolean;
  }

  interface CategoryType {
    name: string;
    order: number;
  }

  // Rozszerz interfejs Window
  declare global {
    interface Window {
      realizacjeData?: {
        displayRealizacje: ProjectType[];
        displayKategorie: CategoryType[];
      };
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    console.log('RealizacjeSection script loaded');
    
    // Pobierz dane z globalnej zmiennej
    const data = window.realizacjeData || { displayRealizacje: [], displayKategorie: [] };
    const displayRealizacje: ProjectType[] = data.displayRealizacje || [
      {
        id: 'mock-project-1',
        title: 'Mock Project 1',
        client: 'Test Client',
        category: 'Konferencje',
        description: 'Test description',
        challenge: 'Test challenge',
        solution: 'Test solution',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      },
      {
        id: 'mock-project-2',
        title: 'Mock Project 2',
        client: 'Test Client 2',
        category: 'Gale Firmowe',
        description: 'Test description 2',
        challenge: 'Test challenge 2',
        solution: 'Test solution 2',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: true
      },
      {
        id: 'mock-project-3',
        title: 'Mock Project 3',
        client: 'Test Client 3',
        category: 'Koncerty',
        description: 'Test description 3',
        challenge: 'Test challenge 3',
        solution: 'Test solution 3',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      },
      {
        id: 'mock-project-4',
        title: 'Mock Project 4',
        client: 'Test Client 4',
        category: 'Eventy Korporacyjne',
        description: 'Test description 4',
        challenge: 'Test challenge 4',
        solution: 'Test solution 4',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      },
      {
        id: 'mock-project-5',
        title: 'Mock Project 5',
        client: 'Test Client 5',
        category: 'Konferencje',
        description: 'Test description 5',
        challenge: 'Test challenge 5',
        solution: 'Test solution 5',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      },
      {
        id: 'mock-project-6',
        title: 'Mock Project 6',
        client: 'Test Client 6',
        category: 'Gale Firmowe',
        description: 'Test description 6',
        challenge: 'Test challenge 6',
        solution: 'Test solution 6',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      },
      {
        id: 'mock-project-7',
        title: 'Mock Project 7',
        client: 'Test Client 7',
        category: 'Koncerty',
        description: 'Test description 7',
        challenge: 'Test challenge 7',
        solution: 'Test solution 7',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      },
      {
        id: 'mock-project-8',
        title: 'Mock Project 8',
        client: 'Test Client 8',
        category: 'Eventy Korporacyjne',
        description: 'Test description 8',
        challenge: 'Test challenge 8',
        solution: 'Test solution 8',
        image: '/images/placeholder-project.jpg',
        gallery: ['/images/placeholder-project.jpg'],
        tags: ['test'],
        featured: false
      }
    ];
    const displayKategorie: CategoryType[] = data.displayKategorie || [
      { name: 'Gale Firmowe', order: 1 },
      { name: 'Konferencje', order: 2 },
      { name: 'Koncerty', order: 3 },
      { name: 'Eventy Korporacyjne', order: 4 },
      { name: 'Eventy Prywatne', order: 5 }
    ];
    
    console.log('displayRealizacje:', displayRealizacje);
    console.log('displayKategorie:', displayKategorie);
    
    // DOM elements
    const filterButtons = document.querySelectorAll('.filter-btn') as NodeListOf<HTMLButtonElement>;
    const projectCards = document.querySelectorAll('.project-card') as NodeListOf<HTMLElement>;
    const loadMoreBtn = document.querySelector('.load-more-btn') as HTMLButtonElement | null;
    const projectsGrid = document.querySelector('.projects-grid') as HTMLElement | null;
    const allProjects = Array.from(document.querySelectorAll('.project-card')) as HTMLElement[];
    
    console.log('DOM Elements found:', {
      filterButtons: filterButtons.length,
      projectCards: projectCards.length,
      loadMoreBtn: !!loadMoreBtn,
      projectsGrid: !!projectsGrid,
      allProjects: allProjects.length
    });
    
    // Log all project categories for debugging
    allProjects.forEach((project, index) => {
      console.log(`Project ${index}:`, {
        id: project.dataset.projectId,
        category: project.dataset.category
      });
    });
    
    // Test load more button
    if (loadMoreBtn) {
      console.log('Load more button found, adding click listener');
      console.log('Load more button styles:', getComputedStyle(loadMoreBtn).display);
    } else {
      console.error('Load more button not found!');
    }
    
    // Test view details buttons
    const viewDetailsButtons = document.querySelectorAll('.view-details-btn') as NodeListOf<HTMLButtonElement>;
    console.log('View details buttons found:', viewDetailsButtons.length);
    
    // Load more state
    let visibleCount = 6;
    let currentFilter = 'all';
    
    // Pobierz projekty zgodne z aktualnym filtrem
    const getFilteredProjects = () => {
      let filtered;
      if (currentFilter === 'all') {
        filtered = allProjects;
      } else {
        filtered = allProjects.filter(project => {
          const category = project.dataset.category;
          const match = category === currentFilter;
          console.log(`Project "${project.dataset.projectId}" category: "${category}", filter: "${currentFilter}", match: ${match}`);
          return match;
        });
      }
      console.log(`getFilteredProjects() returning ${filtered.length} projects for filter "${currentFilter}"`);
      return filtered;
    };
    
    // Prosta, zawsze działająca logika filtrowania z animacją
    const updateProjectsVisibility = () => {
      console.log('updateProjectsVisibility:', { visibleCount, currentFilter });
      
      const filteredProjects = getFilteredProjects();
      console.log('Filtered projects:', filteredProjects.length);
      
      // KROK 1: Resetuj wszystkie projekty do stanu ukrytego
      allProjects.forEach(project => {
        project.style.display = 'none';
        project.style.opacity = '0';
        project.style.transform = 'translateY(30px) scale(0.95)';
        project.classList.remove('project-animate-in');
      });
      
      // KROK 2: Pokaż odpowiednie projekty z animacją (po minimalnym delay)
      requestAnimationFrame(() => {
        filteredProjects.forEach((project, index) => {
          if (index < visibleCount) {
            project.style.display = 'block';
            
            // Użyj setTimeout z różnymi delay dla staggered effect
            setTimeout(() => {
              project.classList.add('project-animate-in');
            }, index * 50);
            
            console.log(`Animating project ${index}:`, project.dataset.projectId);
          }
        });
      });
      
      updateLoadMoreButton(filteredProjects.length);
    };
    
    // Zaktualizuj widoczność przycisku Load More
    const updateLoadMoreButton = (totalFilteredCount: number) => {
      if (!loadMoreBtn) return;
      
      if (visibleCount >= totalFilteredCount) {
        loadMoreBtn.style.display = 'none';
        console.log('Hide load more button - all filtered projects visible');
      } else {
        loadMoreBtn.style.display = 'block';
        console.log('Show load more button - more projects available');
      }
    };
    
    // Inicjalizuj widoczność projektów
    console.log('Initializing project visibility...');
    updateProjectsVisibility();

    // Filter functionality
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filter = button.dataset.filter || 'all';
        console.log('Filter clicked:', filter);
        
        // Zaktualizuj aktualny filtr
        currentFilter = filter;
        
        // Zaktualizuj aktywny przycisk
        filterButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        
        // Resetuj licznik widocznych projektów i zaktualizuj widoczność
        visibleCount = 6;
        updateProjectsVisibility();
        
        console.log('Filter applied successfully:', {
          filter: currentFilter,
          visibleCount,
          filteredProjectsCount: getFilteredProjects().length
        });
      });
    });

    // Load more button handler
    if (loadMoreBtn) {
      loadMoreBtn.addEventListener('click', (e) => {
        e.preventDefault();
        console.log('Load more clicked!', { 
          currentVisibleCount: visibleCount, 
          currentFilter 
        });
        
        const filteredProjects = getFilteredProjects();
        console.log('Filtered projects available:', filteredProjects.length);
        
        // Zwiększ licznik widocznych projektów o 3
        const newVisibleCount = Math.min(visibleCount + 3, filteredProjects.length);
        const previousVisibleCount = visibleCount;
        visibleCount = newVisibleCount;
        
        // Pokaż nowe projekty z animacją konsystentną z filtrowaniem
        for (let i = previousVisibleCount; i < visibleCount; i++) {
          if (filteredProjects[i]) {
            filteredProjects[i].style.display = 'block';
            filteredProjects[i].style.opacity = '0';
            filteredProjects[i].style.transform = 'translateY(30px) scale(0.95)';
            
            // Staggered delay dla Load More
            const delay = (i - previousVisibleCount) * 100;
            
            setTimeout(() => {
              filteredProjects[i].classList.add('project-animate-in');
            }, delay);
            
            console.log(`Showing additional project ${i}:`, filteredProjects[i].dataset.projectId);
          }
        }
        
        // Zaktualizuj przycisk Load More
        updateLoadMoreButton(filteredProjects.length);
        
        // Animuj scroll do nowych projektów
        setTimeout(() => {
          const lastVisibleProject = filteredProjects[visibleCount - 1];
          if (lastVisibleProject) {
            lastVisibleProject.scrollIntoView({ 
              behavior: 'smooth', 
              block: 'center' 
            });
          }
        }, 100);
        
        console.log('Load more completed:', {
          newVisibleCount: visibleCount,
          totalFiltered: filteredProjects.length,
          loadMoreVisible: visibleCount < filteredProjects.length
        });
      });
    } else {
      console.error('Load more button not found for event listener!');
    }

    // Lightbox functionality
    const lightboxModal = document.getElementById('lightbox-modal') as HTMLElement | null;
    const lightboxClose = document.querySelector('.lightbox-close') as HTMLButtonElement | null;
    const lightboxBackdrop = document.querySelector('.lightbox-backdrop') as HTMLElement | null;
    const mainImage = document.querySelector('.gallery-main-image') as HTMLImageElement | null;
    const galleryThumbs = document.querySelector('.gallery-thumbs') as HTMLElement | null;
    const prevBtn = document.querySelector('.gallery-prev') as HTMLButtonElement | null;
    const nextBtn = document.querySelector('.gallery-next') as HTMLButtonElement | null;
    
    let currentGallery: string[] = [];
    let currentImageIndex = 0;

    // Open lightbox - nasłuchuj na przycisk, nie na cały card
    projectCards.forEach((card, cardIndex) => {
      const viewBtn = card.querySelector('.view-details-btn') as HTMLButtonElement | null;
      if (viewBtn) {
        console.log(`Adding click listener to view button ${cardIndex}`);
        viewBtn.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          console.log('View details button clicked!', cardIndex);
          
          const projectId = (card as HTMLElement).dataset.projectId;
          const project = displayRealizacje.find((p: ProjectType) => p.id === projectId);
          
          console.log('Project found:', project);
          
          if (project) {
            openLightbox(project);
          } else {
            console.error('Project not found for ID:', projectId);
          }
        });
      } else {
        console.error(`View button not found for card ${cardIndex}`);
      }
    });

    function openLightbox(project: ProjectType) {
      console.log('Opening lightbox for project:', project);
      
      // Set project info with proper selectors
      const titleElement = document.querySelector('#lightbox-title') as HTMLElement;
      const clientElement = document.querySelector('.lightbox-client') as HTMLElement;
      const categoryElement = document.querySelector('.lightbox-category') as HTMLElement;
      const descriptionElement = document.querySelector('.lightbox-description') as HTMLElement;
      const challengeElement = document.querySelector('.case-study-challenge') as HTMLElement;
      const solutionElement = document.querySelector('.case-study-solution') as HTMLElement;
      
      console.log('Found elements:', {
        title: !!titleElement,
        client: !!clientElement,
        category: !!categoryElement,
        description: !!descriptionElement,
        challenge: !!challengeElement,
        solution: !!solutionElement
      });
      
      if (titleElement) {
        titleElement.textContent = project.title || 'Tytuł projektu';
        console.log('Title set:', project.title);
      }
      if (clientElement) {
        clientElement.textContent = project.client || 'Klient';
        console.log('Client set:', project.client);
      }
      if (categoryElement) {
        categoryElement.textContent = project.category || 'Kategoria';
        console.log('Category set:', project.category);
      }
      if (descriptionElement) {
        descriptionElement.textContent = project.description || 'Opis projektu';
        console.log('Description set:', project.description);
      }
      if (challengeElement) {
        challengeElement.textContent = project.challenge || 'Wyzwanie projektu';
        console.log('Challenge set:', project.challenge);
      }
      if (solutionElement) {
        solutionElement.textContent = project.solution || 'Rozwiązanie projektu';
        console.log('Solution set:', project.solution);
      }
      
      // Set gallery
      currentGallery = project.gallery && project.gallery.length > 0 ? project.gallery : [project.image];
      currentImageIndex = 0;
      
      console.log('Gallery set:', currentGallery);
      
      updateGallery();
      createThumbnails();
      
      // Show modal
      if (lightboxModal) {
        lightboxModal.setAttribute('aria-hidden', 'false');
        lightboxModal.classList.add('open');
        console.log('Modal opened and visible');
      }
      document.body.style.overflow = 'hidden';
    }

    function closeLightbox() {
      console.log('Closing lightbox');
      if (lightboxModal) {
        // Remove focus first to avoid accessibility issues
        const focusedElement = document.activeElement as HTMLElement;
        if (focusedElement && lightboxModal.contains(focusedElement)) {
          focusedElement.blur();
        }
        
        // Start close animation
        lightboxModal.classList.remove('open');
        
        // Wait for animation before setting aria-hidden and cleaning up
        setTimeout(() => {
          lightboxModal.setAttribute('aria-hidden', 'true');
        }, 300);
      }
      document.body.style.overflow = '';
    }

    function updateGallery() {
      console.log('Updating gallery, currentImageIndex:', currentImageIndex);
      if (currentGallery[currentImageIndex] && mainImage) {
        mainImage.src = currentGallery[currentImageIndex];
        mainImage.alt = `Zdjęcie ${currentImageIndex + 1} z galerii`;
        
        // Remove loading skeleton
        mainImage.classList.remove('loading');
        
        // Update active thumbnail
        document.querySelectorAll('.gallery-thumb').forEach((thumb, index) => {
          thumb.classList.toggle('active', index === currentImageIndex);
        });
        
        console.log('Gallery updated with image:', currentGallery[currentImageIndex]);
      }
    }

    function createThumbnails() {
      console.log('Creating thumbnails for gallery:', currentGallery);
      if (!galleryThumbs) {
        console.error('Gallery thumbs container not found');
        return;
      }
      
      galleryThumbs.innerHTML = '';
      
      currentGallery.forEach((image, index) => {
        const thumb = document.createElement('div');
        thumb.className = 'gallery-thumb';
        if (index === 0) thumb.classList.add('active');
        
        thumb.innerHTML = `<img src="${image}" alt="Miniatura ${index + 1}" />`;
        
        thumb.addEventListener('click', () => {
          console.log('Thumbnail clicked:', index);
          currentImageIndex = index;
          updateGallery();
        });
        
        galleryThumbs.appendChild(thumb);
      });
      
      console.log('Thumbnails created:', currentGallery.length);
    }

    // Navigation
    prevBtn?.addEventListener('click', () => {
      currentImageIndex = currentImageIndex > 0 ? currentImageIndex - 1 : currentGallery.length - 1;
      updateGallery();
    });

    nextBtn?.addEventListener('click', () => {
      currentImageIndex = currentImageIndex < currentGallery.length - 1 ? currentImageIndex + 1 : 0;
      updateGallery();
    });

    // Close lightbox
    lightboxClose?.addEventListener('click', closeLightbox);
    lightboxBackdrop?.addEventListener('click', closeLightbox);

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (lightboxModal && lightboxModal.classList.contains('open')) {
        switch(e.key) {
          case 'Escape':
            closeLightbox();
            break;
          case 'ArrowLeft':
            if (prevBtn) prevBtn.click();
            break;
          case 'ArrowRight':
            if (nextBtn) nextBtn.click();
            break;
        }
      }
    });

    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('fade-in-up');
        }
      });
    }, observerOptions);

    // Observe project cards
    projectCards.forEach(card => {
      observer.observe(card);
    });
  });
</script>
