---
// Sekcja "Zaufali Nam" z karuzelą klientów
export interface Props {
  data?: {
    hidden?: boolean;
    title?: string;
    subtitle?: string;
    hide_testimonials?: boolean;
    client_logos?: Array<{
      name: string;
      logo: string;
      website?: string;
    }>;
    testimonials?: Array<{
      name: string;
      position: string;
      company: string;
      quote: string;
      photo?: string;
      rating: number;
    }>;
    stats?: Array<{
      number: string;
      label: string;
    }>;
  };
}

const { data } = Astro.props;

// Jeśli sekcja jest ukryta, nie renderuj jej
if (data?.hidden) {
  return null;
}

// Fallback values jeśli brak danych z CMS
const clientsData = {
  hidden: data?.hidden || false,
  title: data?.title || "Cieszymy się zaufaniem najlepszych",
  subtitle: data?.subtitle || "Od startupsów po korporacje, od lokalnych eventów po międzynarodowe konferencje - każdego klienta traktujemy z równą pasją i zaangażowaniem.",
  hide_testimonials: data?.hide_testimonials || false,
  stats: data?.stats || [
    { number: "150+", label: "Zadowolonych klientów" },
    { number: "300+", label: "Zrealizowanych projektów" },
    { number: "98%", label: "satysfakcji" },
    { number: "10+", label: "Lat na rynku" }
  ],
  client_logos: data?.client_logos || [],
  testimonials: data?.testimonials || []
};
---

<section id="klienci" class="section klienci-section">
  <div class="container">
    <!-- Section Header -->
    <div class="section-header">
      <h2 class="section-title">{clientsData.title}</h2>
      <p class="section-subtitle">
        {clientsData.subtitle}
      </p>
    </div>

    <!-- Statystyki klientów -->
    <div class="client-stats">
      {clientsData.stats.map((stat) => (
        <div class="stat-item">
          <div class="stat-number" data-count={stat.number.replace(/\D/g, '')}>{stat.number}</div>
          <div class="stat-label">{stat.label}</div>
        </div>
      ))}
    </div>

    <!-- Karuzela logotypów -->
    <div class="clients-carousel-container">
      <div class="clients-carousel">
        {clientsData.client_logos.length > 0 ? (
          <div class="carousel-track" data-direction="left">
            {clientsData.client_logos.map((client, index) => (
              <div class="client-logo">
                <img src={client.logo} alt={client.name} loading="lazy" />
              </div>
            ))}
            <!-- Duplicated for seamless loop -->
            {clientsData.client_logos.map((client, index) => (
              <div class="client-logo">
                <img src={client.logo} alt={client.name} loading="lazy" />
              </div>
            ))}
          </div>
        ) : (
          <!-- Fallback hardcoded logos if no CMS data -->
          <div class="carousel-track" data-direction="left">
            <!-- Tier 1 - Premium clients -->
            <div class="client-logo premium">
              <img src="/images/clients/microsoft.svg" alt="Microsoft" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/google.svg" alt="Google" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/apple.svg" alt="Apple" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/meta.svg" alt="Meta" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/amazon.svg" alt="Amazon" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/netflix.svg" alt="Netflix" loading="lazy" />
            </div>
            
            <!-- Duplicated for seamless loop -->
            <div class="client-logo premium">
              <img src="/images/clients/microsoft.svg" alt="Microsoft" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/google.svg" alt="Google" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/apple.svg" alt="Apple" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/meta.svg" alt="Meta" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/amazon.svg" alt="Amazon" loading="lazy" />
            </div>
            <div class="client-logo premium">
              <img src="/images/clients/netflix.svg" alt="Netflix" loading="lazy" />
            </div>
          </div>

          <!-- Druga linia logotypów -->
          <div class="carousel-track" data-direction="right">
            <!-- Tier 2 - Tech companies -->
            <div class="client-logo">
              <img src="/images/clients/spotify.svg" alt="Spotify" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/tesla.svg" alt="Tesla" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/uber.svg" alt="Uber" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/airbnb.svg" alt="Airbnb" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/slack.svg" alt="Slack" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/zoom.svg" alt="Zoom" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/dropbox.svg" alt="Dropbox" loading="lazy" />
            </div>
            
            <!-- Duplicated for seamless loop -->
            <div class="client-logo">
              <img src="/images/clients/spotify.svg" alt="Spotify" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/tesla.svg" alt="Tesla" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/uber.svg" alt="Uber" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/airbnb.svg" alt="Airbnb" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/slack.svg" alt="Slack" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/zoom.svg" alt="Zoom" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/dropbox.svg" alt="Dropbox" loading="lazy" />
            </div>
          </div>

          <!-- Trzecia linia logotypów -->
          <div class="carousel-track" data-direction="left">
            <!-- Tier 3 - Local companies -->
            <div class="client-logo">
              <img src="/images/clients/allegro.svg" alt="Allegro" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/cd-projekt.svg" alt="CD Projekt" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/pko.svg" alt="PKO Bank Polski" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/orlen.svg" alt="Orlen" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/asseco.svg" alt="Asseco" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/livechat.svg" alt="LiveChat" loading="lazy" />
            </div>
            
            <!-- Duplicated for seamless loop -->
            <div class="client-logo">
              <img src="/images/clients/allegro.svg" alt="Allegro" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/cd-projekt.svg" alt="CD Projekt" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/pko.svg" alt="PKO Bank Polski" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/orlen.svg" alt="Orlen" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/asseco.svg" alt="Asseco" loading="lazy" />
            </div>
            <div class="client-logo">
              <img src="/images/clients/livechat.svg" alt="LiveChat" loading="lazy" />
            </div>
          </div>
        )}
      </div>

      <!-- Gradient overlays for smooth edges -->
      <div class="carousel-gradient carousel-gradient-left"></div>
      <div class="carousel-gradient carousel-gradient-right"></div>
    </div>

    <!-- Testimonials -->
    {!clientsData.hide_testimonials && clientsData.testimonials.length > 0 && (
      <div class="testimonials">
        {clientsData.testimonials.map((testimonial, index) => (
          <div class={`testimonial ${index === 0 ? 'active' : ''}`}>
            <div class="testimonial-content">
              <blockquote>
                {testimonial.quote}
              </blockquote>
              <div class="testimonial-author">
                <div class="author-info">
                  <div class="author-name">{testimonial.name}</div>
                  <div class="author-position">{testimonial.position}, {testimonial.company}</div>
                </div>
                {testimonial.photo && (
                  <div class="author-avatar">
                    <img src={testimonial.photo} alt={testimonial.name} loading="lazy" />
                  </div>
                )}
              </div>
            </div>
          </div>
        ))}

        <!-- Testimonial navigation -->
        {clientsData.testimonials.length > 1 && (
          <div class="testimonial-nav">
            {clientsData.testimonials.map((_, index) => (
              <button 
                class={`testimonial-dot ${index === 0 ? 'active' : ''}`} 
                data-testimonial={index} 
                aria-label={`Opinia ${index + 1}`}
              />
            ))}
          </div>
        )}
      </div>
    )}
  </div>
</section>

<style>
  .klienci-section {
    background-color: var(--bg-main);
    position: relative;
    overflow: hidden;
    min-height: 100vh;
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .section-title {
    color: var(--text-main);
    margin-bottom: 1rem;
  }

  .section-subtitle {
    font-size: 1.2rem;
    color: var(--text-secondary);
    max-width: 700px;
    margin: 0 auto;
    line-height: 1.6;
  }

  /* Client Statistics */
  .client-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
    padding: 3rem 0;
    background: linear-gradient(135deg, rgba(0, 169, 255, 0.05), rgba(0, 169, 255, 0.1));
    border-radius: 20px;
    border: 1px solid rgba(0, 169, 255, 0.1);
  }

  .stat-item {
    text-align: center;
    padding: 1rem;
  }

  .stat-number {
    display: block;
    font-size: clamp(2.5rem, 4vw, 3.5rem);
    font-weight: 800;
    color: var(--accent-blue);
    font-family: var(--font-heading);
    line-height: 1;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    color: var(--text-secondary);
    font-size: 1rem;
    font-weight: 500;
  }

  /* Clients Carousel */
  .clients-carousel-container {
    position: relative;
    margin: 4rem 0;
    overflow: hidden;
    padding: 15px 0;
  }

  .clients-carousel {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .carousel-track {
    display: flex;
    gap: 3rem;
    align-items: center;
    animation-duration: 30s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    padding: 0 15px;
  }

  .carousel-track[data-direction="left"] {
    animation-name: scrollLeft;
  }

  .carousel-track[data-direction="right"] {
    animation-name: scrollRight;
  }

  .carousel-track:nth-child(2) {
    animation-duration: 35s;
  }

  .carousel-track:nth-child(3) {
    animation-duration: 25s;
  }

  @keyframes scrollLeft {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  @keyframes scrollRight {
    0% {
      transform: translateX(-50%);
    }
    100% {
      transform: translateX(0);
    }
  }

  .client-logo {
    flex-shrink: 0;
    width: 180px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 12px;
    padding: 0;
    transition: var(--transition-fast);
    border: 1px solid rgba(255, 255, 255, 0.05);
    overflow: visible;
    position: relative;
    z-index: 1;
  }

  .client-logo:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(0, 169, 255, 0.3);
    transform: translateY(-5px);
    z-index: 10;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  }

  .client-logo.premium {
    background: linear-gradient(135deg, rgba(0, 169, 255, 0.1), rgba(0, 169, 255, 0.05));
    border-color: rgba(0, 169, 255, 0.2);
  }

  .client-logo img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    filter: brightness(1);
    transition: var(--transition-fast);
  }

  .client-logo:hover img {
    filter: brightness(1.1);
    transform: scale(1.05);
  }

  /* Carousel gradients */
  .carousel-gradient {
    position: absolute;
    top: 15px;
    bottom: 15px;
    width: 100px;
    pointer-events: none;
    z-index: 2;
  }

  .carousel-gradient-left {
    left: 0;
    background: linear-gradient(90deg, var(--bg-main) 0%, transparent 100%);
  }

  .carousel-gradient-right {
    right: 0;
    background: linear-gradient(270deg, var(--bg-main) 0%, transparent 100%);
  }

  /* Testimonials */
  .testimonials {
    margin-top: 4rem;
    position: relative;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }

  .testimonial {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: var(--transition-fast);
  }

  .testimonial.active {
    opacity: 1;
    visibility: visible;
    position: relative;
  }

  .testimonial-content {
    background: var(--bg-secondary);
    border-radius: 20px;
    padding: 3rem;
    border: 1px solid rgba(0, 169, 255, 0.1);
    text-align: center;
  }

  .testimonial blockquote {
    font-size: 1.3rem;
    line-height: 1.6;
    color: var(--text-main);
    margin: 0 0 2rem 0;
    font-style: italic;
    position: relative;
  }

  .testimonial blockquote::before {
    content: '"';
    font-size: 4rem;
    color: var(--accent-blue);
    position: absolute;
    top: -1rem;
    left: -2rem;
    font-family: serif;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1.5rem;
  }

  .author-info {
    text-align: left;
  }

  .author-name {
    font-weight: 700;
    color: var(--text-main);
    margin-bottom: 0.3rem;
  }

  .author-position {
    color: var(--text-secondary);
    font-size: 0.9rem;
  }

  .author-avatar {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    overflow: hidden;
    border: 3px solid var(--accent-blue);
  }

  .author-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Testimonial Navigation */
  .testimonial-nav {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
  }

  .testimonial-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    border: none;
    cursor: pointer;
    transition: var(--transition-fast);
  }

  .testimonial-dot:hover,
  .testimonial-dot.active {
    background: var(--accent-blue);
    transform: scale(1.2);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .client-logo {
      width: 150px;
      height: 70px;
      padding: 0;
    }

    .carousel-track {
      gap: 2rem;
    }
  }

  @media (max-width: 768px) {
    .client-stats {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      padding: 2rem 1rem;
    }

    .client-logo {
      width: 120px;
      height: 60px;
      padding: 0;
    }

    .carousel-track {
      gap: 1.5rem;
    }

    .carousel-container {
      padding: 0 1rem;
    }

    .testimonial-content {
      padding: 2rem;
    }

    .testimonial blockquote {
      font-size: 1.1rem;
    }

    .testimonial blockquote::before {
      font-size: 3rem;
      top: -0.5rem;
      left: -1rem;
    }

    .testimonial-author {
      flex-direction: column;
      gap: 1rem;
    }

    .author-info {
      text-align: center;
    }

    .carousel-nav {
      gap: 1rem;
    }
  }

  @media (max-width: 480px) {
    .client-stats {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .client-logo {
      width: 100px;
      height: 50px;
      padding: 0;
    }

    .carousel-container {
      padding: 0 0.5rem;
    }

    .testimonial-content {
      padding: 1.5rem;
    }

    .testimonial blockquote {
      font-size: 1rem;
    }

    .author-avatar {
      width: 50px;
      height: 50px;
    }

    .carousel-gradient {
      width: 50px;
    }
  }

  /* Pause animations on hover */
  .clients-carousel-container:hover .carousel-track {
    animation-play-state: paused;
  }

  /* Reduce motion preference */
  @media (prefers-reduced-motion: reduce) {
    .carousel-track {
      animation: none;
    }
    
    .client-logo {
      animation: none;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .client-logo img {
      filter: contrast(1.5) brightness(1);
    }
    
    .client-logo:hover img {
      filter: contrast(1.5) brightness(1.2);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Counter animation
    const animateCounters = () => {
      const counters = document.querySelectorAll('.client-stats .stat-number');
      
      counters.forEach(counter => {
        const element = counter as HTMLElement;
        const target = parseInt(element.dataset.count || '0');
        const suffix = target === 98 ? '%' : '+';
        const duration = 2000;
        const step = target / (duration / 16);
        let current = 0;

        const updateCounter = () => {
          current += step;
          if (current >= target) {
            counter.textContent = target + suffix;
          } else {
            counter.textContent = Math.floor(current) + (current > target * 0.8 ? suffix : '');
            requestAnimationFrame(updateCounter);
          }
        };

        updateCounter();
      });
    };

    // Testimonial rotation
    const testimonials = document.querySelectorAll('.testimonial');
    const testimonialDots = document.querySelectorAll('.testimonial-dot');
    let currentTestimonial = 0;

    const showTestimonial = (index: number) => {
      testimonials.forEach((testimonial, i) => {
        testimonial.classList.toggle('active', i === index);
      });
      
      testimonialDots.forEach((dot, i) => {
        dot.classList.toggle('active', i === index);
      });
    };

    const nextTestimonial = () => {
      currentTestimonial = (currentTestimonial + 1) % testimonials.length;
      showTestimonial(currentTestimonial);
    };

    // Testimonial navigation
    testimonialDots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentTestimonial = index;
        showTestimonial(currentTestimonial);
        
        // Reset auto-rotation
        clearInterval(testimonialInterval);
        testimonialInterval = setInterval(nextTestimonial, 5000);
      });
    });

    // Auto-rotate testimonials
    let testimonialInterval = setInterval(nextTestimonial, 5000);

    // Pause auto-rotation on hover
    const testimonialsContainer = document.querySelector('.testimonials');
    testimonialsContainer?.addEventListener('mouseenter', () => {
      clearInterval(testimonialInterval);
    });

    testimonialsContainer?.addEventListener('mouseleave', () => {
      testimonialInterval = setInterval(nextTestimonial, 5000);
    });

    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('fade-in-up');
          
          // Trigger counter animation when stats are visible
          if (entry.target.classList.contains('client-stats')) {
            animateCounters();
          }
        }
      });
    }, observerOptions);

    // Observe elements for animation
    document.querySelectorAll('.section-header, .client-stats, .clients-carousel-container, .testimonials').forEach(el => {
      observer.observe(el);
    });

    // Handle logo loading errors
    const clientLogos = document.querySelectorAll('.client-logo img');
    clientLogos.forEach(img => {
      const imgElement = img as HTMLImageElement;
      imgElement.addEventListener('error', () => {
        // Replace with placeholder or hide
        imgElement.style.display = 'none';
        if (imgElement.parentElement) {
          (imgElement.parentElement as HTMLElement).style.background = 'rgba(255, 255, 255, 0.1)';
          imgElement.parentElement.innerHTML += '<span style="color: var(--text-secondary); font-size: 0.8rem;">Logo</span>';
        }
      });
    });

    // Keyboard navigation for testimonials
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft' && document.activeElement?.closest('.testimonials')) {
        currentTestimonial = currentTestimonial > 0 ? currentTestimonial - 1 : testimonials.length - 1;
        showTestimonial(currentTestimonial);
      } else if (e.key === 'ArrowRight' && document.activeElement?.closest('.testimonials')) {
        nextTestimonial();
      }
    });

    // Optimize carousel performance
    const handleVisibilityChange = () => {
      const carouselTracks = document.querySelectorAll('.carousel-track');
      if (document.hidden) {
        carouselTracks.forEach(track => {
          (track as HTMLElement).style.animationPlayState = 'paused';
        });
      } else {
        carouselTracks.forEach(track => {
          (track as HTMLElement).style.animationPlayState = 'running';
        });
      }
    };

    document.addEventListener('visibilitychange', handleVisibilityChange);
  });
</script>
